<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>disable</Nullable>
    <!-- <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked> -->
    <!-- <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion> -->
    <!-- <IsPackable>false</IsPackable> -->
    <!-- <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes> -->
    <!-- <SpaProxyServerUrl>https://localhost:44494</SpaProxyServerUrl> -->
    <!-- <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand> -->
    <RootNamespace>reactnet_pmtool</RootNamespace>
    <ImplicitUsings>enable</ImplicitUsings>
    <!-- <IntermediateOutputPath>obj/</IntermediateOutputPath> -->
    <!-- <GenerateAssemblyInfo>false</GenerateAssemblyInfo> -->
    <InvariantGlobalization>false</InvariantGlobalization>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="8.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="8.0.10" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="8.0.10" />
    <PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="8.0.8" />
    <!-- <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="8.0.0" /> -->
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="8.0.10">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="8.0.10" />
    <PackageReference Include="Serilog.AspNetCore" Version="8.0.3" />
    <PackageReference Include="Serilog.Sinks.Console" Version="6.0.0" />
    <PackageReference Include="Serilog.Sinks.File" Version="6.0.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.9.0" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="8.3.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\ManagementTool.Core.Services\ManagementTool.Core.Services.csproj" />
    <ProjectReference Include="..\ManagementTool.Entities\ManagementTool.Entities.csproj" />
    <ProjectReference Include="..\ManagementTool.Infrastructure.Persistence\ManagementTool.Infrastructure.Persistence.csproj" />
    <ProjectReference Include="..\ManagementTool.Infrastructure\ManagementTool.Infrastructure.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="wwwroot\Avatars\" />
  </ItemGroup>

</Project>
  <!-- <ItemGroup>
    Don't publish the SPA source files, but do show them in the project files list
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\ManagementTool.UI.App\package-lock.json" />
    <None Include="..\ManagementTool.UI.App\package.json" />
    <None Include="..\ManagementTool.UI.App\public\manifest.json" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    Ensure Node.js is installed
    <Exec Command="node version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    As part of publishing, ensure the JS resources are freshly built in production mode
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    Include the newly-built files in the publish output
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project> -->
